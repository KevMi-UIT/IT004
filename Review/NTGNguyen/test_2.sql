CREATE
DATABASE BAITHI2;

USE BAITHI2;

--Cau1
CREATE TABLE CSCHANNUOI (
  MACS VARCHAR(100) PRIMARY KEY NOT NULL,
  TENCS VARCHAR(100),
  LOAICS VARCHAR(100),
  NGDAIDIEN VARCHAR(100),
  DTHOAI VARCHAR(100)
);

CREATE TABLE GIONGVN (
  MAGIONG VARCHAR(100) PRIMARY KEY NOT NULL,
  TENGIONG VARCHAR(100),
  LOAIVN VARCHAR(100)
);

CREATE TABLE DIEUKIENCN (
  MADK VARCHAR(100) PRIMARY KEY NOT NULL,
  MACS VARCHAR(100) FOREIGN KEY REFERENCES CSCHANNUOI (MACS),
  QUYMO INT,
  KCXYCT FLOAT,
  KCHTNSH FLOAT
);

CREATE TABLE GPCN (
  MAGP VARCHAR(100) PRIMARY KEY NOT NULL,
  MACS VARCHAR(100) FOREIGN KEY REFERENCES CSCHANNUOI (MACS),
  NGCAP DATE,
  SOGP VARCHAR(100),
  SOGIONG INT
);

CREATE TABLE CTGP (
  MAGP VARCHAR(100) FOREIGN KEY REFERENCES GPCN (MAGP),
  MAGIONG VARCHAR(100) FOREIGN KEY REFERENCES GIONGVN (MAGIONG),
  SL INT,
  PRIMARY KEY (MAGP, MAGIONG)
);

CREATE TABLE DOTCN (
  MADOTCN VARCHAR(100) PRIMARY KEY NOT NULL,
  MACS VARCHAR(100) FOREIGN KEY REFERENCES CSCHANNUOI (MACS),
  MAGIONG VARCHAR(100) FOREIGN KEY REFERENCES GIONGVN (MAGIONG),
  SLVN INT,
  NGDB DATE,
  PHGTHUC VARCHAR(100),
  NGXUATDK DATE
);

GO;

--Cau 3
CREATE
TRIGGER chk_gp ON GPCN AFTER
INSERT
,
UPDATE AS BEGIN IF EXISTS (
  SELECT
    *
  FROM
    inserted ist
  WHERE
    YEAR(ist.NGCAP) < 2019
    AND ist.SOGIONG > 5
) BEGIN RAISERROR ('...', 16, 1);

ROLLBACK TRANSACTION END END;

GO;

--Cau 4
CREATE
TRIGGER chk_heo ON CTGP AFTER
INSERT
,
UPDATE AS BEGIN IF EXISTS (
  SELECT
    *
  FROM
    inserted ist
    JOIN GIONGVN gvn ON gvn.MAGIONG = ist.MAGIONG
  WHERE
    gvn.LOAIVN = 'Heo'
    AND ist.SL > 100
) BEGIN RAISERROR ('...', 16, 1);

ROLLBACK TRANSACTION END END;

--Cau 5
SELECT
  cscn.MACS,
  cscn.TENCS
FROM
  CSCHANNUOI cscn
  JOIN DIEUKIENCN dk ON dk.MACS = cscn.MACS
WHERE
  cscn.LOAICS = 'nong ho'
  AND dk.QUYMO > 30
  AND dk.KCXYCT < 200;

--Cau 6
SELECT
  gvn.MAGIONG,
  gvn.TENGIONG
FROM
  GIONGVN gvn
WHERE
  gvn.LOAIVN = 'Bo'
  AND gvn.MAGIONG IN (
    SELECT
      MAGIONG
    FROM
      CTGP
  )
EXCEPT
SELECT
  gvn.MAGIONG,
  gvn.TENGIONG
FROM
  GIONGVN gvn
WHERE
  gvn.LOAIVN = 'Bo'
  AND gvn.MAGIONG IN (
    SELECT
      MAGIONG
    FROM
      DOTCN
    WHERE
      YEAR(NGDB) = 2024
  );

--Cau 7
-- FIXME: Nguyen lam sai roi nhe
SELECT
  t_1.MAGIONG,
  MAX(t_1.SOTHANG)
FROM
  (
    SELECT
      MAGIONG,
      MONTH(NGXUATDK) - MONTH(NGDB) SOTHANG
    FROM
      DOTCN
  ) t_1
GROUP BY
  t_1.MAGIONG;

SELECT
  GIONGVN.LOAIVN,
  DOTCN.PHGTHUC,
  MAX(MONTH(DOTC.NGXUATDK) - MONTH(DOTC.NGDB)) AS SOTHANG
FROM
  DOTCN
  INNER JOIN GIONGVN ON DOTCN.MAGIONG = GIONGVN.MAGIONG
GROUP BY
  GIONGVN.LOAIVN,
  DOTCN.PHGTHUC;

--Cau 8
SELECT
  gvn.LOAIVN,
  gvn.MAGIONG
FROM
  GIONGVN gvn
WHERE
  MAGIONG IN (
    SELECT
      TOP 1
    WITH
      TIES MAGIONG
    FROM
      DOTCN dcn_1
    WHERE
      YEAR(NGDB) = 2024
      AND gvn.MAGIONG = dcn_1.MAGIONG
    ORDER BY
      SLVN DESC
  );

WITH
  TEMP AS (
    SELECT
      MAGIONG,
      SOLVN
    FROM
      DOTCN
    WHERE
      YEAR(NGDB) = 2024
  ),
  MAX_SLVN AS (
    SELECT
      TEMP.LOAIVN,
      GIONGVN.MAGIONG,
      MAX(SLVN) AS MAX_SLVN
    FROM
      TEMP
      INNER JOIN GIONGVN ON TEMP.MAGIONG = GIONGVN.MAGIONG
    GROUP BY
      TEMP.LOAIVN,
      GIONGVN.MAGIONG
  )
SELECT
  LOAIVN,
  MAGIONG
FROM
  MAX_SLVN;

--Cau 9
SELECT
  MACS,
  TENCS
FROM
  CSCHANNUOI cs
WHERE
  NOT EXISTS (
    SELECT
      *
    FROM
      GIONGVN gvn
    WHERE
      LOAIVN = 'Heo'
      AND NOT EXISTS (
        SELECT
          *
        FROM
          DOTCN dcn
        WHERE
          dcn.MACS = cs.MACS
          AND dcn.MAGIONG = gvn.MAGIONG
          AND dcn.SOLVN >= 20
      )
  );
