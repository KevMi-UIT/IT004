-- Remember, constraint name is optional
--
-- CREATE
CREATE TABLE PEOPLE (
  ID CHAR(4) NOT NULL PRIMARY KEY,
  NAME VARCHAR(40),
  JOB CHAR(1) FOREIGN KEY REFERENCES JOB (ID) ON DELETE CASCADE, -- CASCADE | NO ACTION | SET NULL | SET DEFAULT
  BIRTHDAY SMALLDATETIME,
  INCOME MONEY DEFAULT 0,
  -- OR
  -- PRIMARY KEY(ID),
  -- FOREIGN KEY (JOB) REFERENCES JOB(ID)
);

CREATE TABLE JOB (
  ID CHAR(1) NOT NULL PRIMARY KEY,
  NAME VARCHAR(40) UNIQUE,
  SALARY MONEY,
  -- OR
  -- CONSTRAINT ... UNIQUE(FIELD_1, FIELD_2)
);

-- DEFAULT VALUE
ALTER TABLE PEOPLE
ADD DEFAULT 0 FOR INCOME;

ALTER TABLE PEOPLE
ALTER COLUMN INCOME DROP DEFAULT;

-- DISABLE CONSTRAINTS
-- Disable the constraints on a table called tableName:
ALTER TABLE tableName NOCHECK CONSTRAINT ALL;

-- Re-enable the constraints on a table called tableName:
ALTER TABLE tableName
WITH
  CHECK CHECK CONSTRAINT ALL;

-- Disable constraints for all tables in the database:
EXEC sp_msforeachtable 'ALTER TABLE ? NOCHECK CONSTRAINT ALL';

-- Re-enable constraints for all tables in the database:
EXEC sp_msforeachtable 'ALTER TABLE ? WITH CHECK CHECK CONSTRAINT ALL';

-- INSERT VALUES
SET
DATEFORMAT DMY
INSERT INTO
  PEOPLE
  -- OR
  -- PEOPLE (FIELD_1, FIELD_2,...)
VALUES
  ('0001', 'Tran Van A', '0', '27/09/2005', 0),
  ('0002', 'Tran Van B', '1', '28/09/2005', 1);

-- DELETE RECORD
DELETE FROM PEOPLE
WHERE
  ID = '0001';

-- UPDATE VALUE
UPDATE PEOPLE
SET
  INCOME = CASE
    WHEN JOB = '0' THEN '10'
    WHEN JOB = '1' THEN '20'
    ELSE '0'
  END;

-- MODIFY: ADD / DELETE / MODIFY COLUMN
ALTER TABLE PEOPLE
ADD COLUMN BLEBLE INT;

ALTER TABLE PEOPLE
DROP COLUMN BLEBLE;

ALTER TABLE PEOPLE RENAME BLEBLE TO BLIBLI;

ALTER TABLE PEOPLE
ALTER COLUMN BLEBLE VARCHAR(5);

-- MODIFY: ADD / DROP
ALTER TABLE JOB
ADD UNIQUE (ID);

ALTER TABLE PEOPLE
ADD FOREIGN KEY (JOB) REFERENCES JOB (ID);

-- CHECK
ALTER TABLE PEOPLE
ADD CHECK (LEFT(NAME, 4) = 'Tran');

-- SELECT
SELECT
  TOP (1)
WITH
  TIES -- WITH TIES | PERCENT
  ID
FROM
  PEOPLE
  -- WHERE 
GROUP BY
  ID
  -- HAVING COUNT(DISTINCT ...) > ...
ORDER BY
  INCOME DESC -- DESC | ASC, also FUNC...?
;

SELECT
  *
FROM
  PEOPLE
WHERE
  NAME LIKE 'Tran _guyen%';

-- UINION, EXCEPT, INTERSECT
--
-- DIVIDE
SELECT
  A_1
FROM
  A
WHERE
  A_2 = 'Cond_1'
  AND NOT EXISTS (
    SELECT
      B_1
    FROM
      B
    WHERE
      B_2 = 'Cond_2'
      AND NOT EXISTS (
        SELECT
          C_1 -- C can be self table or a table with relation
        FROM
          C AS
        WHERE
          C.A_1 = A.A_1
          AND C.B_1 = B.B_1
      )
  );

-- TRIGGER (WTF SQL FORMATTER???)
CREATE
TRIGGER TRG_PEOPLE_JOB ON PEOPLE FOR
INSERT
,
UPDATE AS BEGIN IF (
  EXISTS (
    SELECT
      *
    FROM
      INSERTED,
      JOB
    WHERE
      INSERTED.JOB = JOB.ID
      AND SALARY > 10
  )
) BEGIN PRINT ('Khong cho luong > 10') ROLLBACK TRANSACTION END END;
